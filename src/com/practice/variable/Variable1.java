package com.practice.variable;

public class Variable1 {
    public static void main(String[] args) {
        //1. 변수
        //- 프로그램은 작업을 처리하는 과정에서 필요에 따라 데이터를 메모리에 저장함
        //  -> 이 때 변수를 사용
        //- 값을 저장할 수 있는 메모리의 공간
        //- 수시로 값이 변동됨
        //- 하나의 값, 하나의 타입만 저장할 수 있음


        //2. 변수 선언
        int age;    //정수(int) 값을 저장할 수 있는 age 변수 선언
        double value;   //실수(double) 값을 저장할 수 있는 value 변수 선언
        int x, y, z; //같은 타입의 변수는 콤마를 이용해서 한꺼번에 선언 가능


        //3. 변수 명명 규칙
        //- 첫 번째 글자는 문자이거나 ‘$’, ‘_’이어야 하고 숫자로 시작할 수 없음
        //- 영어 대소문자가 구분됨
        //- 첫 문자는 소문자, 다른 단어가 붙을 경우 첫 문자를 대문자로 함(관례)
        //- 문자 수(길이) 제한은 없음
        //- 자바 예약어를 사용할 수 없음
        //- 변수 이름을 보고 변수가 어떤 값을 저장하고 있는지 알 수 있게 의미 있는 변수명을 지어야 함
        //- 변수 이름에 한글도 사용 가능하지만 가급적 한글을 포함하지 않는 것이 좋음


        //4. 변수값 저장
        //- 변수에 값을 저장할 때에는 대입 연산자(=)를 사용함
        //- 자바 언어에서 =은 우측의 값을 좌측 변수에 저장한다는 의미를 가짐
        int score;  //변수 선언
        score = 90; //값 저장


        //5. 초기화
        //- 변수를 선언하고 처음 저장한 값


        //6. 리터럴
        //- 소스 코드 내에서 직접 입력된 값
        //- 값의 종류에 따라 정수 리터럴, 실수 리터럴, 문자 리터럴, 논리 리터럴로 구분됨


        //7. 정수 리터럴
        //- 소수점이 없는 정수 리터럴은 10진수로 간주
        //      -> 0, 75, -100
        //- 0으로 시작되는 리터럴은 8진수로 간주
        //      -> 02, -04
        //- 0x 또는 0X로 시작하고 0~9 숫자나 A~F 또는 a~f로 구성된 리터럴은 16진수로 간주
        //		-> 0x5, 0XA, 0xB3, 0xAC08


        //8. 실수 리터럴
        //- 소수점이 있는 리터럴은 10진수 실수로 간주
        //      -> 0.25, -3.14
        //- 대문자 E 또는 소문자 e가 있는 리터럴은 10진수 지수와 가수로 간주함
        //		-> 5E7 (5 x 10^7), 0.12E-5 (0.12 x 10^-5)


        //9. 문자 리터럴
        //- 작은 따옴표(‘)로 묶은 텍스트는 하나의 문자 리터럴로 간주함
        //		-> ‘A’, ‘한’, ‘\t’, ‘\n’
        //- 이스케이프 문자
        //		-> 역슬래쉬가 붙은 문자 리터럴
        //		-> \t, \n, \”, \’, \\
        //- char 타입만 저장 가능


        //10. 문자열 리터럴
        //- 큰따옴표(")로 묶은 텍스트
        //- 큰따옴표 안에 텍스트가 없어도 문자열 리터럴로 간주됨
        //- 문자열 리터럴 내부에서도 이스케이프 문자를 사용할 수 있음
        //- String 타입만 저장 가능
        System.out.println("대한민국");
        System.out.println("탭 만큼 이동\t합니다.");
        System.out.println("한 줄 내려쓰기\n합니다.");


        //11. 논리 리터럴
        //- true와 false
        //- boolean 타입만 저장 가능


        //12. 변수값 읽기
        //- 변수는 초기화가 되어야 읽을 수가 있음
        int intValue;               //변수 intValue 선언(초기화 안 됨)
        //int result = intValue + 10; //변수 intValue의 값을 읽고 10을 더한 결과값을 result에 저장
        //intValue가 초기화되지 않아 error

        int intValue2 = 30;             //변수 intValue2가 30으로 초기화됨
        int result2 = intValue2 + 10;   //변수 intValue2 값을 읽고 10을 더한 결과값을 result에 저장
        System.out.println("result2 = " + result2);




    }
}
